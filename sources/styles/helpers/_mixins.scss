@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin font-face($style-name, $file, $family, $category:"") {
  $filepath: "../fonts/" + $family + "/" + $file;
  @font-face {
    font-family: "#{$style-name}";
    src: url($filepath + ".eot");
    src: url($filepath + ".eot?#iefix") format('embedded-opentype'), url($filepath + ".woff") format('woff'), url($filepath + ".ttf")  format('truetype'), url($filepath + ".svg#" + $style-name + "") format('svg');
  }
  %#{$style-name} {
    font: {
      @if $category != "" {
        family: "#{$style-name}", #{$category};
      }
      @else {
        family: "#{$style-name}";
        weight: normal;
      }
    }
  }
}

$default-legacy-ie: 7 8 9 !default;

@mixin legacy-ie($versions: $default-legacy-ie) {
  $sel: ();
  @each $v in $versions {
    $sel: append($sel, unquote('.ie#{$v} &'), comma);
  }

  #{$sel} {
    @content;
  }
}

%image-replacement {
  background-color: transparent;
  border: 0;
  display: block;
  font: 0/0 a;
  overflow: hidden;
  text-shadow: none;

  &:before {
    content: "";
    display: block;
    width: 0;
    height: 150%;
  }
}

@function em($px, $base: $default_font_size) {
  @return ($px / $base) * 1em;
}

@function is-direction($value) {
  $is-keyword: index((to top, to top right, to right top, to right, to bottom right, to right bottom, to bottom, to bottom left, to left bottom, to left, to left top, to top left), $value);
  $is-angle: type-of($value) == 'number' and index('deg' 'grad' 'turn' 'rad', unit($value));

  @return $is-keyword or $is-angle;
}

@function legacy-direction($value) {
  @if is-direction($value) == false {
    @error "Cannot convert `#{$value}` to legacy syntax because it doesn't seem to be a direction.";
  }

  $conversion-map: (
  to top          : bottom,
  to top right    : bottom left,
  to right top    : left bottom,
  to right        : left,
  to bottom right : top left,
  to right bottom : left top,
  to bottom       : top,
  to bottom left  : top right,
  to left bottom  : right top,
  to left         : right,
  to left top     : right bottom,
  to top left     : bottom right
  );

  @if map-has-key($conversion-map, $value) {
    @return map-get($conversion-map, $value);
  }

  @return 90deg - $value;
}

@mixin linear-gradient($direction, $color-stops...) {
  // Direction has been omitted and happens to be a color-stop
  @if is-direction($direction) == false {
    $color-stops: $direction, $color-stops;
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}
